{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/json/jsonMode.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","../node_modules/monaco-editor/esm/vs/language/json/workerManager.js","../node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/json/tokenization.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js"],"names":["defaults","disposables","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","push","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","Object","__WEBPACK_IMPORTED_MODULE_2__tokenization_js__","setLanguageConfiguration","richEditConfiguration","registerColorProvider","__webpack_require__","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","isWhiteSpace","ch","isLineBreak","isDigit","__webpack_exports__","text","ignoreTrivia","pos","len","value","tokenOffset","token","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","code","String","fromCharCode","result","start","substring","ch_1","scanString","commentClosed","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","documentText","range","options","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","offset","isEOL","endOffset","content","i","nChars","tabSize","charAt","Math","floor","computeIndentLevel","indentValue","eol","getEOL","lineBreak","indentLevel","insertSpaces","repeat","scanner","__WEBPACK_IMPORTED_MODULE_0__scanner_js__","hasError","newLineAndIndent","editOperations","addEdit","startOffset","firstToken","firstTokenStart","initialIndent","firstTokenEnd","secondToken","replaceContent","commentTokenStart","secondTokenStart","s","indexOf","position","segments","earlyReturnException","previousNode","previousNodeInst","type","isAtPropertyKey","setPreviousNode","columnOffset","visit","onObjectBegin","onObjectProperty","name","onObjectEnd","pop","onArrayBegin","onArrayEnd","onLiteralValue","getLiteralNodeType","onSeparator","sep","last","e","path","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","Array","isArray","object","array","onError","error","children","ensurePropertyComplete","parent","valueNode","root","node","path_1","segment","found","_a","_b","propertyNode","index","getNodeValue","map","obj","create","prop","replaceCh","kind","_scanner","parts","replace","join","visitor","toNoArgVisit","visitFunction","toOneArgVisit","arg","onComment","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","JSON","parse","parseLiteral","d","WorkerManager","Promise","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","createData","languageSettings","diagnosticsOptions","getProxy","p","completeCallback","errorCallback","r","resources","then","_","withSyncedResources","c","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Uri","Range","DiagnosticsAdapter","_languageId","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","event","getModels","forEach","key","resource","resetSchema","doValidation","diagnostics","markers","diag","severity","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","line","startColumn","character","endLineNumber","endColumn","message","source","getModel","undefined","err","console","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","newText","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","getWordUntilPosition","wireCancellationToken","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","insertTextFormat","isIncomplete","toMarkdownString","thing","language","HoverAdapter","provideHover","doHover","contents","toMarkedStringArray","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","containerName","mKind","SymbolKind","Namespace","Package","Constant","Number","Boolean","toSymbolKind","location","fromFormattingOptions","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","edits","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","presentations","presentation","additionalTextEdits","promise","cancel","onCancellationRequested","Position","Location","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","is","candidate","Is","defined","number","one","two","three","four","string","title","command","args","insert","del","textDocument","VersionedTextDocumentIdentifier","TextDocumentIdentifier","TextDocumentItem","MarkupKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolInformation","CodeActionContext","CodeLens","FormattingOptions","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","documentChanges","textDocumentEdit","textEditChange","changes","keys","getTextEditChange","version","PlainText","Markdown","Folder","EnumMember","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","parameters","Read","Write","Key","Null","typedArray","data","boolean","DocumentLink","target","TextDocument","TextDocumentSaveReason","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","ret","a","b","lastModifiedOffset","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","max","min","low","high","mid","lineOffset","nextLineOffset","call","check","every","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","numberOfInsertedCharacters","adjustOffset","__WEBPACK_IMPORTED_MODULE_0__deps_jsonc_parser_main_js__","lastWasColon","tokens","endState","clone","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","startIndex","scopes","_state","equals","other","setStateData","__WEBPACK_IMPORTED_MODULE_3__impl_parser_js__","createScanner","__WEBPACK_IMPORTED_MODULE_2__impl_scanner_js__","__WEBPACK_IMPORTED_MODULE_1__parser_js__","setProperty","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","withFormatting","stringify","newProperty","removalIndex","toRemove","applyEdit","begin","__WEBPACK_IMPORTED_MODULE_0__format_js__","edit_1"],"mappings":"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","file":"static/js/2.7f6400a4.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js\n// module id = 1486\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js\n// module id = 1563\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, 0, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, offset, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=format.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js\n// module id = 1605\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object'\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.columnOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.columnOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [] }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.columnOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    if (node.type === 'array') {\n        return node.children.map(getNodeValue);\n    }\n    else if (node.type === 'object') {\n        var obj = Object.create(null);\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            obj[prop.children[0].value] = getNodeValue(prop.children[1]);\n        }\n        return obj;\n    }\n    return node.value;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n//# sourceMappingURL=parser.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js\n// module id = 1606\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/workerManager.js\n// module id = 1710\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                location: toLocation(item.location)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js\n// module id = 1711\n// module chunks = 2","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\n// module id = 1712\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/tokenization.js\n// module id = 1713\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js\n// module id = 1714\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format.js';\nimport { parseTree, findNodeAtLocation } from './parser.js';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, path, value, formattingOptions, getInsertionIndex) {\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) {\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) {\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) {\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n    var _a;\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) {\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=edit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js\n// module id = 1715\n// module chunks = 2"],"sourceRoot":""}