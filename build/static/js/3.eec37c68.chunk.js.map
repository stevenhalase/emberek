{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/html/htmlMode.js","../node_modules/monaco-editor/esm/vs/language/html/workerManager.js","../node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js"],"names":["defaults","client","__WEBPACK_IMPORTED_MODULE_0__workerManager_js__","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__","registerDocumentHighlightProvider","registerLinkProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","__webpack_require__","d","__webpack_exports__","WorkerManager","Promise","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","createData","languageSettings","options","label","getProxy","p","completeCallback","errorCallback","r","resources","then","_","withSyncedResources","c","e","__WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__","Range","Uri","DiagnosticsAdapter","_languageId","_disposables","_listener","Object","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","getModels","forEach","key","resource","doValidation","diagnostics","markers","map","code","diag","String","severity","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","getModel","undefined","err","console","error","fromPosition","position","column","lineNumber","fromRange","getStartPosition","getEndPosition","toRange","toCompletionItemKind","kind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","text","newText","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","token","getWordUntilPosition","wireCancellationToken","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","insertTextFormat","value","isIncomplete","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","mKind","DocumentHighlightKind","Read","Write","toHighlighKind","DocumentLinkAdapter","provideLinks","findDocumentLinks","url","target","fromFormattingOptions","tabSize","insertSpaces","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","edits","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","promise","cancel","onCancellationRequested","Position","Location","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","is","candidate","Is","defined","number","one","two","three","four","string","result","title","command","args","replace","insert","del","textDocument","VersionedTextDocumentIdentifier","Array","isArray","TextDocumentIdentifier","TextDocumentItem","MarkupKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolKind","SymbolInformation","CodeActionContext","CodeLens","FormattingOptions","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","documentChanges","textDocumentEdit","textEditChange","changes","keys","getTextEditChange","version","PlainText","Markdown","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","fromPlainText","plainText","parameters","Namespace","Package","Number","Boolean","Key","Null","name","containerName","location","typedArray","data","boolean","DocumentLink","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","i","ret","a","b","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","call","check","every"],"mappings":"iHAOA,SAAAA,GACA,IAAAC,EAAA,IAAAC,EAAA,EAAAF,GACAG,EAAA,WAEA,IADA,IAAAC,KACAC,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CD,EAAAC,GAAAC,UAAAD,GAEA,OAAAJ,EAAAO,yBAAAC,MAAAR,EAAAG,IAEAM,EAAAV,EAAAU,WAEAC,OAAAC,UAAAC,+BAAAH,EAAA,IAAAI,EAAA,EAAAX,IACAQ,OAAAC,UAAAG,kCAAAL,EAAA,IAAAI,EAAA,EAAAX,IACAQ,OAAAC,UAAAI,qBAAAN,EAAA,IAAAI,EAAA,EAAAX,IAEA,SAAAO,IACAC,OAAAC,UAAAK,uCAAAP,EAAA,IAAAI,EAAA,EAAAX,IACAQ,OAAAC,UAAAM,4CAAAR,EAAA,IAAAI,EAAA,EAAAX,IACA,IAAAW,EAAA,EAAAJ,EAAAP,EAAAH,mBAzBAc,EAAAK,EAAA,yCCAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAKA,IAAAC,EAAAZ,OAAAY,QAEAD,EAAA,WACA,SAAAA,EAAAtB,GACA,IAAAwB,EAAAC,KACAA,KAAAC,UAAA1B,EACAyB,KAAAE,QAAA,KACAF,KAAAG,mBAAAC,YAAA,WAA2D,OAAAL,EAAAM,gBAA+B,KAC1FL,KAAAM,cAAA,EACAN,KAAAO,sBAAAP,KAAAC,UAAAO,YAAA,WAA6E,OAAAT,EAAAU,gBAqD7E,OAnDAZ,EAAAa,UAAAD,YAAA,WACAT,KAAAE,UACAF,KAAAE,QAAAS,UACAX,KAAAE,QAAA,MAEAF,KAAAY,QAAA,MAEAf,EAAAa,UAAAC,QAAA,WACAE,cAAAb,KAAAG,oBACAH,KAAAO,sBAAAI,UACAX,KAAAS,eAEAZ,EAAAa,UAAAL,aAAA,WACAL,KAAAE,UAGAY,KAAAC,MAAAf,KAAAM,cA1BA,MA4BAN,KAAAS,gBAGAZ,EAAAa,UAAAM,WAAA,WAeA,OAdAhB,KAAAM,cAAAQ,KAAAC,MACAf,KAAAY,UACAZ,KAAAE,QAAAhB,OAAA+B,OAAAC,iBAEAC,SAAA,8BAEAC,YACAC,iBAAArB,KAAAC,UAAAqB,QACArC,WAAAe,KAAAC,UAAAhB,YAEAsC,MAAAvB,KAAAC,UAAAhB,aAEAe,KAAAY,QAAAZ,KAAAE,QAAAsB,YAEAxB,KAAAY,SAEAf,EAAAa,UAAA3B,yBAAA,WAGA,IAFA,IAKA6B,EAUAa,EACAC,EACAC,EACAC,EAlBA7B,EAAAC,KACA6B,KACAjD,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CiD,EAAAjD,GAAAC,UAAAD,GAGA,OASA6C,EATAzB,KAAAgB,aAAAc,KAAA,SAAAtD,GACAoC,EAAApC,IACSsD,KAAA,SAAAC,GACT,OAAAhC,EAAAG,QAAA8B,oBAAAH,KACSC,KAAA,SAAAC,GAAqB,OAAAnB,IAQ9BgB,EAAA,IAAA9B,EAAA,SAAAmC,EAAAC,GACAR,EAAAO,EACAN,EAAAO,GACK,cACLT,EAAAK,KAAAJ,EAAAC,GACAC,GAXA/B,EA5DA,sOCPA,IAAAsC,EAAAzC,EAAA,MAOA0C,GADAlD,OAAAmD,IACAnD,OAAAkD,OAEAE,EAAA,WACA,SAAAA,EAAAC,EAAArC,EAAA3B,GACA,IAAAwB,EAAAC,KACAA,KAAAuC,cACAvC,KAAAE,UACAF,KAAAwC,gBACAxC,KAAAyC,UAAAC,OAAAC,OAAA,MACA,IAAAC,EAAA,SAAAC,GACA,IAIAC,EAJAC,EAAAF,EAAAG,YACAD,IAAAhD,EAAAwC,cAIAxC,EAAA0C,UAAAI,EAAAI,IAAAC,YAAAL,EAAAM,mBAAA,WACAC,aAAAN,GACAA,EAAAO,WAAA,WAAiD,OAAAtD,EAAAuD,YAAAT,EAAAI,IAAAF,IAA+C,OAEhGhD,EAAAuD,YAAAT,EAAAI,IAAAF,KAEAQ,EAAA,SAAAV,GACA3D,OAAA+B,OAAAuC,gBAAAX,EAAA9C,EAAAwC,gBACA,IAAAkB,EAAAZ,EAAAI,IAAAC,WACAQ,EAAA3D,EAAA0C,UAAAgB,GACAC,IACAA,EAAA/C,iBACAZ,EAAA0C,UAAAgB,KAGAzD,KAAAwC,aAAAmB,KAAAzE,OAAA+B,OAAA2C,iBAAAhB,IACA5C,KAAAwC,aAAAmB,KAAAzE,OAAA+B,OAAA4C,mBAAA,SAAAhB,GACAU,EAAAV,MAEA7C,KAAAwC,aAAAmB,KAAAzE,OAAA+B,OAAA6C,yBAAA,SAAAC,GACAR,EAAAQ,EAAAlB,OACAD,EAAAmB,EAAAlB,UAEA7C,KAAAwC,aAAAmB,KAAApF,EAAAiC,YAAA,SAAAuB,GACA7C,OAAA+B,OAAA+C,YAAAC,QAAA,SAAApB,GACAA,EAAAG,cAAAjD,EAAAwC,cACAgB,EAAAV,GACAD,EAAAC,SAIA7C,KAAAwC,aAAAmB,MACAhD,QAAA,WACA,QAAAuD,KAAAnE,EAAA0C,UACA1C,EAAA0C,UAAAyB,GAAAvD,aAIAzB,OAAA+B,OAAA+C,YAAAC,QAAArB,GAgBA,OAdAN,EAAA5B,UAAAC,QAAA,WACAX,KAAAwC,aAAAyB,QAAA,SAAAtE,GAAgD,OAAAA,KAAAgB,YAChDX,KAAAwC,iBAEAF,EAAA5B,UAAA4C,YAAA,SAAAa,EAAAlF,GACAe,KAAAE,QAAAiE,GAAArC,KAAA,SAAApD,GACA,OAAAA,EAAA0F,aAAAD,EAAAjB,YAAApB,KAAA,SAAAuC,GACA,IAAAC,EAAAD,EAAAE,IAAA,SAAA5E,GAA4D,OAqB5D6E,EAAA,kBADAC,EApB4D9E,GAqB5D6E,KAAAE,OAAAD,EAAAD,MAAAC,EAAAD,MAEAG,SAbA,SAAAC,GACA,OAAAA,GACA,KAAAzC,EAAA,EAAA0C,MAAA,OAAA3F,OAAA4F,eAAAD,MACA,KAAA1C,EAAA,EAAA4C,QAAA,OAAA7F,OAAA4F,eAAAC,QACA,KAAA5C,EAAA,EAAA6C,YAAA,OAAA9F,OAAA4F,eAAAG,KACA,KAAA9C,EAAA,EAAA+C,KAAA,OAAAhG,OAAA4F,eAAAI,KACA,QACA,OAAAhG,OAAA4F,eAAAG,MAMAE,CAAAV,EAAAE,UACAS,gBAAAX,EAAAY,MAAAC,MAAAC,KAAA,EACAC,YAAAf,EAAAY,MAAAC,MAAAG,UAAA,EACAC,cAAAjB,EAAAY,MAAAM,IAAAJ,KAAA,EACAK,UAAAnB,EAAAY,MAAAM,IAAAF,UAAA,EACAI,QAAApB,EAAAoB,QACArB,OACAsB,OAAArB,EAAAqB,QAVA,IAAArB,EACAD,IApBAtF,OAAA+B,OAAAuC,gBAAAtE,OAAA+B,OAAA8E,SAAA5B,GAAAlF,EAAAqF,OAESxC,UAAAkE,EAAA,SAAAC,GACTC,QAAAC,MAAAF,MAGA3D,EAnEA,GA8FA,SAAA8D,EAAAC,GACA,GAAAA,EAGA,OAAYZ,UAAAY,EAAAC,OAAA,EAAAf,KAAAc,EAAAE,WAAA,GAEZ,SAAAC,EAAAnB,GACA,GAAAA,EAGA,OAAYC,MAAAc,EAAAf,EAAAoB,oBAAAd,IAAAS,EAAAf,EAAAqB,mBAEZ,SAAAC,EAAAtB,GACA,GAAAA,EAGA,WAAAjD,EAAAiD,EAAAC,MAAAC,KAAA,EAAAF,EAAAC,MAAAG,UAAA,EAAAJ,EAAAM,IAAAJ,KAAA,EAAAF,EAAAM,IAAAF,UAAA,GAEA,SAAAmB,EAAAC,GACA,IAAAC,EAAA5H,OAAAC,UAAA4H,mBACA,OAAAF,GACA,KAAA1E,EAAA,EAAA6E,KAAA,OAAAF,EAAAE,KACA,KAAA7E,EAAA,EAAA8E,OAAA,OAAAH,EAAAG,OACA,KAAA9E,EAAA,EAAA+E,SAAA,OAAAJ,EAAAI,SACA,KAAA/E,EAAA,EAAAgF,YAAA,OAAAL,EAAAK,YACA,KAAAhF,EAAA,EAAAiF,MAAA,OAAAN,EAAAM,MACA,KAAAjF,EAAA,EAAAkF,SAAA,OAAAP,EAAAO,SACA,KAAAlF,EAAA,EAAAmF,MAAA,OAAAR,EAAAQ,MACA,KAAAnF,EAAA,EAAAoF,UAAA,OAAAT,EAAAS,UACA,KAAApF,EAAA,EAAAqF,OAAA,OAAAV,EAAAU,OACA,KAAArF,EAAA,EAAAsF,SAAA,OAAAX,EAAAW,SACA,KAAAtF,EAAA,EAAAuF,KAAA,OAAAZ,EAAAY,KACA,KAAAvF,EAAA,EAAAwF,MAAA,OAAAb,EAAAa,MACA,KAAAxF,EAAA,EAAAyF,KAAA,OAAAd,EAAAc,KACA,KAAAzF,EAAA,EAAA0F,QAAA,OAAAf,EAAAe,QACA,KAAA1F,EAAA,EAAA2F,QAAA,OAAAhB,EAAAgB,QACA,KAAA3F,EAAA,EAAA4F,MAAA,OAAAjB,EAAAiB,MACA,KAAA5F,EAAA,EAAA6F,KAAA,OAAAlB,EAAAkB,KACA,KAAA7F,EAAA,EAAA8F,UAAA,OAAAnB,EAAAmB,UAEA,OAAAnB,EAAAW,SA0BA,SAAAS,EAAAC,GACA,GAAAA,EAGA,OACA9C,MAAAsB,EAAAwB,EAAA9C,OACA+C,KAAAD,EAAAE,SA4CA,IAAAC,EAAA,WACA,SAAAA,EAAApI,GACAF,KAAAE,UA2CA,OAzCAwC,OAAA6F,eAAAD,EAAA5H,UAAA,qBACA8H,IAAA,WACA,iCAEAC,YAAA,EACAC,cAAA,IAEAJ,EAAA5H,UAAAiI,uBAAA,SAAA9F,EAAAwD,EAAAuC,GACA/F,EAAAgG,qBAAAxC,GAAA,IACAlC,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA5I,KAAAE,QAAAiE,GAAArC,KAAA,SAAApD,GACA,OAAAA,EAAAqK,WAAA5E,EAAAjB,WAAAkD,EAAAC,MACSvE,KAAA,SAAAkH,GACT,GAAAA,EAAA,CAGA,IAAAC,EAAAD,EAAAC,MAAA1E,IAAA,SAAA2E,GACA,IAAAC,GACA5H,MAAA2H,EAAA3H,MACA6H,WAAAF,EAAAE,WACAC,SAAAH,EAAAG,SACAC,WAAAJ,EAAAI,WACAC,cAAAL,EAAAK,cACAC,OAAAN,EAAAM,OACA3C,KAAAD,EAAAsC,EAAArC,OASA,OAPAqC,EAAAf,WACAgB,EAAA9D,MAAAsB,EAAAuC,EAAAf,SAAA9C,OACA8D,EAAAC,WAAAF,EAAAf,SAAAE,SAEAa,EAAAO,mBAAAtH,EAAA,EAAA2F,UACAqB,EAAAC,YAAuCM,MAAAP,EAAAC,aAEvCD,IAEA,OACAQ,aAAAX,EAAAW,aACAV,cAIAX,EA7CA,GAuHA,IAAAsB,EAAA,WACA,SAAAA,EAAA1J,GACAF,KAAAE,UAcA,OAZA0J,EAAAlJ,UAAAmJ,0BAAA,SAAAhH,EAAAwD,EAAAuC,GACA,IAAAzE,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA5I,KAAAE,QAAAiE,GAAArC,KAAA,SAAApD,GAA2F,OAAAA,EAAAoL,uBAAA3F,EAAAjB,WAAAkD,EAAAC,MAAqFvE,KAAA,SAAAmH,GAChL,GAAAA,EAGA,OAAAA,EAAA1E,IAAA,SAAA4E,GAA8C,OAC9C9D,MAAAsB,EAAAwC,EAAA9D,OACAwB,KArBA,SAAAA,GACA,IAAAkD,EAAA7K,OAAAC,UAAA6K,sBACA,OAAAnD,GACA,KAAA1E,EAAA,EAAA8H,KAAA,OAAAF,EAAAE,KACA,KAAA9H,EAAA,EAAA+H,MAAA,OAAAH,EAAAG,MACA,KAAA/H,EAAA,EAAA6E,KAAA,OAAA+C,EAAA/C,KAEA,OAAA+C,EAAA/C,KAcAmD,CAAAhB,EAAAtC,aAIA+C,EAhBA,GAmBAQ,EAAA,WACA,SAAAA,EAAAlK,GACAF,KAAAE,UAcA,OAZAkK,EAAA1J,UAAA2J,aAAA,SAAAxH,EAAA+F,GACA,IAAAzE,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA5I,KAAAE,QAAAiE,GAAArC,KAAA,SAAApD,GAA2F,OAAAA,EAAA4L,kBAAAnG,EAAAjB,cAAwDpB,KAAA,SAAAmH,GACnJ,GAAAA,EAGA,OAAAA,EAAA1E,IAAA,SAAA4E,GAA8C,OAC9C9D,MAAAsB,EAAAwC,EAAA9D,OACAkF,IAAApB,EAAAqB,cAIAJ,EAhBA,GAmBA,SAAAK,EAAAnJ,GACA,OACAoJ,QAAApJ,EAAAoJ,QACAC,aAAArJ,EAAAqJ,cAGA,IAAAC,EAAA,WACA,SAAAA,EAAA1K,GACAF,KAAAE,UAaA,OAXA0K,EAAAlK,UAAAmK,+BAAA,SAAAhI,EAAAvB,EAAAsH,GACA,IAAAzE,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA5I,KAAAE,QAAAiE,GAAArC,KAAA,SAAApD,GACA,OAAAA,EAAAoM,OAAA3G,EAAAjB,WAAA,KAAAuH,EAAAnJ,IAAAQ,KAAA,SAAAiJ,GACA,GAAAA,GAAA,IAAAA,EAAAjM,OAGA,OAAAiM,EAAAxG,IAAA2D,SAIA0C,EAfA,GAkBAI,EAAA,WACA,SAAAA,EAAA9K,GACAF,KAAAE,UAaA,OAXA8K,EAAAtK,UAAAuK,oCAAA,SAAApI,EAAAwC,EAAA/D,EAAAsH,GACA,IAAAzE,EAAAtB,EAAAI,IACA,OAAA6F,EAAAF,EAAA5I,KAAAE,QAAAiE,GAAArC,KAAA,SAAApD,GACA,OAAAA,EAAAoM,OAAA3G,EAAAjB,WAAAsD,EAAAnB,GAAAoF,EAAAnJ,IAAAQ,KAAA,SAAAiJ,GACA,GAAAA,GAAA,IAAAA,EAAAjM,OAGA,OAAAiM,EAAAxG,IAAA2D,SAIA8C,EAfA,GAqBA,SAAAlC,EAAAF,EAAAsC,GAIA,OAHAA,EAAAC,QACAvC,EAAAwC,wBAAA,WAAmD,OAAAF,EAAAC,WAEnDD,sCChaA,IAAAG,EAwBAjJ,EA2BAkJ,EAuBAC,EAuBAC,EAqCAC,EA8BAC,EAiCAC,kOApMA,SAAAN,GASAA,EAAA1I,OAHA,SAAA4C,EAAAE,GACA,OAAgBF,OAAAE,cAUhB4F,EAAAO,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAC,EAAAE,OAAAH,EAAAtG,OAAAuG,EAAAE,OAAAH,EAAApG,YAfA,CAkBC4F,WAMD,SAAAjJ,GAYAA,EAAAO,OAXA,SAAAsJ,EAAAC,EAAAC,EAAAC,GACA,GAAAN,EAAAE,OAAAC,IAAAH,EAAAE,OAAAE,IAAAJ,EAAAE,OAAAG,IAAAL,EAAAE,OAAAI,GACA,OAAoB9G,MAAA+F,EAAA1I,OAAAsJ,EAAAC,GAAAvG,IAAA0F,EAAA1I,OAAAwJ,EAAAC,IAEpB,GAAAf,EAAAO,GAAAK,IAAAZ,EAAAO,GAAAM,GACA,OAAoB5G,MAAA2G,EAAAtG,IAAAuG,GAGpB,UAAArH,MAAA,8CAAAoH,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,MAWAhK,EAAAwJ,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAR,EAAAO,GAAAC,EAAAvG,QAAA+F,EAAAO,GAAAC,EAAAlG,MAlBA,CAqBCvD,WAMD,SAAAkJ,GASAA,EAAA3I,OAHA,SAAAM,EAAAoC,GACA,OAAgBpC,MAAAoC,UAUhBiG,EAAAM,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAzJ,EAAAwJ,GAAAC,EAAAxG,SAAAyG,EAAAO,OAAAR,EAAA5I,MAAA6I,EAAA9F,UAAA6F,EAAA5I,OAfA,CAkBCqI,WAKD,SAAAC,GAIAA,EAAA1G,MAAA,EAIA0G,EAAAxG,QAAA,EAIAwG,EAAAvG,YAAA,EAIAuG,EAAArG,KAAA,EAhBA,CAiBCqG,WAMD,SAAAC,GAiBAA,EAAA7I,OAbA,SAAA0C,EAAAQ,EAAAlB,EAAAH,EAAAsB,GACA,IAAAwG,GAAsBjH,QAAAQ,WAUtB,OATAiG,EAAAC,QAAApH,KACA2H,EAAA3H,YAEAmH,EAAAC,QAAAvH,KACA8H,EAAA9H,QAEAsH,EAAAC,QAAAjG,KACAwG,EAAAxG,UAEAwG,GAeAd,EAAAI,GATA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IACAzJ,EAAAwJ,GAAAC,EAAAxG,QACAyG,EAAAO,OAAAR,EAAAhG,WACAiG,EAAAE,OAAAH,EAAAlH,WAAAmH,EAAA9F,UAAA6F,EAAAlH,aACAmH,EAAAE,OAAAH,EAAArH,OAAAsH,EAAAO,OAAAR,EAAArH,OAAAsH,EAAA9F,UAAA6F,EAAArH,SACAsH,EAAAO,OAAAR,EAAA/F,SAAAgG,EAAA9F,UAAA6F,EAAA/F,UA5BA,CA+BC0F,WAMD,SAAAC,GAeAA,EAAA9I,OAXA,SAAA4J,EAAAC,GAEA,IADA,IAAAC,KACA7N,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/C6N,EAAA7N,EAAA,GAAAC,UAAAD,GAEA,IAAA0N,GAAsBC,QAAAC,WAItB,OAHAV,EAAAC,QAAAU,MAAA3N,OAAA,IACAwN,EAAAzN,UAAA4N,GAEAH,GAUAb,EAAAG,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAC,EAAAO,OAAAR,EAAAU,QAAAT,EAAAO,OAAAR,EAAAU,QArBA,CAwBCd,WAMD,SAAAC,GASAA,EAAAgB,QAHA,SAAArH,EAAAgD,GACA,OAAgBhD,QAAAgD,YAWhBqD,EAAAiB,OAHA,SAAAtG,EAAAgC,GACA,OAAgBhD,OAASC,MAAAe,EAAAV,IAAAU,GAAiCgC,YAU1DqD,EAAAkB,IAHA,SAAAvH,GACA,OAAgBA,QAAAgD,QAAA,KAxBhB,CA2BCqD,WAMD,SAAAC,GAOAA,EAAAhJ,OAHA,SAAAkK,EAAA9B,GACA,OAAgB8B,eAAA9B,UAShBY,EAAAC,GANA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IACAiB,EAAAlB,GAAAC,EAAAgB,eACAE,MAAAC,QAAAnB,EAAAd,QAZA,CAeCY,WACD,IA4GAsB,EAuBAH,EAwBAI,EA6BAC,EAcApG,EAgCAqG,EAsBAC,EAeAC,EAaAC,EAgBAC,EAkBAC,EAwBAzD,EAmBA0D,EAkBAC,EA6BAC,EA4BAC,EAsBAC,EAyBAC,EA/dAC,EAAA,WACA,SAAAA,EAAAjD,GACA/K,KAAA+K,QAoBA,OAlBAiD,EAAAtN,UAAAiM,OAAA,SAAAtG,EAAAgC,GACArI,KAAA+K,MAAApH,KAAA+H,EAAAiB,OAAAtG,EAAAgC,KAEA2F,EAAAtN,UAAAgM,QAAA,SAAArH,EAAAgD,GACArI,KAAA+K,MAAApH,KAAA+H,EAAAgB,QAAArH,EAAAgD,KAEA2F,EAAAtN,UAAAuN,OAAA,SAAA5I,GACArF,KAAA+K,MAAApH,KAAA+H,EAAAkB,IAAAvH,KAEA2I,EAAAtN,UAAAwN,IAAA,SAAAC,GACAnO,KAAA+K,MAAApH,KAAAwK,IAEAH,EAAAtN,UAAA0N,IAAA,WACA,OAAApO,KAAA+K,OAEAiD,EAAAtN,UAAA2N,MAAA,WACArO,KAAA+K,MAAAuD,OAAA,EAAAtO,KAAA+K,MAAAjM,SAEAkP,EAtBA,IA2BA,WACA,SAAAO,EAAAC,GACA,IAAAzO,EAAAC,KACAA,KAAAyO,iBAAA/L,OAAAC,OAAA,MACA6L,IACAxO,KAAA0O,eAAAF,EACAA,EAAAG,gBACAH,EAAAG,gBAAA1K,QAAA,SAAA2K,GACA,IAAAC,EAAA,IAAAb,EAAAY,EAAA7D,OACAhL,EAAA0O,iBAAAG,EAAA/B,aAAA5J,KAAA4L,IAGAL,EAAAM,SACApM,OAAAqM,KAAAP,EAAAM,SAAA7K,QAAA,SAAAC,GACA,IAAA2K,EAAA,IAAAb,EAAAQ,EAAAM,QAAA5K,IACAnE,EAAA0O,iBAAAvK,GAAA2K,KAKAnM,OAAA6F,eAAAgG,EAAA7N,UAAA,QAKA8H,IAAA,WACA,OAAAxI,KAAA0O,gBAEAjG,YAAA,EACAC,cAAA,IAEA6F,EAAA7N,UAAAsO,kBAAA,SAAA9K,GACA,GAAA4I,EAAAlB,GAAA1H,GAAA,CAMA,GALAlE,KAAA0O,iBACA1O,KAAA0O,gBACAC,sBAGA3O,KAAA0O,eAAAC,gBACA,UAAA9J,MAAA,oEAEA,IAAAgI,EAAA3I,EAEA,KADAoI,EAAAtM,KAAAyO,iBAAA5B,EAAA5J,MACA,CACA,IACA2L,GACA/B,eACA9B,MAHAA,MAKA/K,KAAA0O,eAAAC,gBAAAhL,KAAAiL,GACAtC,EAAA,IAAA0B,EAAAjD,GACA/K,KAAAyO,iBAAA5B,EAAA5J,KAAAqJ,EAEA,OAAAA,EAQA,GALAtM,KAAA0O,iBACA1O,KAAA0O,gBACAI,QAAApM,OAAAC,OAAA,SAGA3C,KAAA0O,eAAAI,QACA,UAAAjK,MAAA,kEAEA,IAAAyH,EACA,KADAA,EAAAtM,KAAAyO,iBAAAvK,IACA,CACA,IAAA6G,KACA/K,KAAA0O,eAAAI,QAAA5K,GAAA6G,EACAuB,EAAA,IAAA0B,EAAAjD,GACA/K,KAAAyO,iBAAAvK,GAAAoI,EAEA,OAAAA,GAvEA,IAkFA,SAAAW,GAQAA,EAAAtK,OAHA,SAAAM,GACA,OAAgBA,QAUhBgK,EAAArB,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAC,EAAAO,OAAAR,EAAA5I,MAdA,CAiBCgK,WAMD,SAAAH,GASAA,EAAAnK,OAHA,SAAAM,EAAAgM,GACA,OAAgBhM,MAAAgM,YAUhBnC,EAAAlB,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAC,EAAAO,OAAAR,EAAA5I,MAAA6I,EAAAE,OAAAH,EAAAoD,UAfA,CAkBCnC,WAMD,SAAAI,GAWAA,EAAAvK,OAHA,SAAAM,EAAAhE,EAAAgQ,EAAA7G,GACA,OAAgBnF,MAAAhE,aAAAgQ,UAAA7G,SAUhB8E,EAAAtB,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAC,EAAAO,OAAAR,EAAA5I,MAAA6I,EAAAO,OAAAR,EAAA5M,aAAA6M,EAAAE,OAAAH,EAAAoD,UAAAnD,EAAAO,OAAAR,EAAAzD,OAjBA,CAoBC8E,WASD,SAAAC,GAIAA,EAAA+B,UAAA,YAIA/B,EAAAgC,SAAA,WARA,CASChC,WAKD,SAAApG,GACAA,EAAAC,KAAA,EACAD,EAAAE,OAAA,EACAF,EAAAG,SAAA,EACAH,EAAAI,YAAA,EACAJ,EAAAK,MAAA,EACAL,EAAAM,SAAA,EACAN,EAAAO,MAAA,EACAP,EAAAQ,UAAA,EACAR,EAAAS,OAAA,EACAT,EAAAU,SAAA,GACAV,EAAAW,KAAA,GACAX,EAAAY,MAAA,GACAZ,EAAAa,KAAA,GACAb,EAAAc,QAAA,GACAd,EAAAe,QAAA,GACAf,EAAAgB,MAAA,GACAhB,EAAAiB,KAAA,GACAjB,EAAAkB,UAAA,GACAlB,EAAAqI,OAAA,GACArI,EAAAsI,WAAA,GACAtI,EAAAuI,SAAA,GACAvI,EAAAwI,OAAA,GACAxI,EAAAyI,MAAA,GACAzI,EAAA0I,SAAA,GACA1I,EAAA2I,cAAA,GAzBA,CA0BC3I,WAMD,SAAAqG,GAIAA,EAAA8B,UAAA,EAWA9B,EAAAtF,QAAA,EAfA,CAgBCsF,WAMD,SAAAC,GAQAA,EAAA1K,OAHA,SAAApB,GACA,OAAgBA,UANhB,CASC8L,WAMD,SAAAC,GAUAA,EAAA3K,OAHA,SAAAsG,EAAAU,GACA,OAAgBV,YAAAU,mBARhB,CAWC2D,WAED,SAAAC,GASAA,EAAAoC,cAHA,SAAAC,GACA,OAAAA,EAAAlD,QAAA,wBAA0C,SAP1C,CAUCa,WAMD,SAAAC,GAUAA,EAAA7K,OAHA,SAAApB,EAAAgI,GACA,OAAAA,GAAgChI,QAAAgI,kBAAiDhI,UARjF,CAYCiM,WAMD,SAAAC,GAkBAA,EAAA9K,OAjBA,SAAApB,EAAAgI,GAEA,IADA,IAAAsG,KACAjR,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CiR,EAAAjR,EAAA,GAAAC,UAAAD,GAEA,IAAA0N,GAAsB/K,SAUtB,OATAuK,EAAAC,QAAAxC,KACA+C,EAAA/C,iBAEAuC,EAAAC,QAAA8D,GACAvD,EAAAuD,aAGAvD,EAAAuD,cAEAvD,GAhBA,CAmBCmB,WAKD,SAAAzD,GAIAA,EAAAhD,KAAA,EAIAgD,EAAAC,KAAA,EAIAD,EAAAE,MAAA,EAZA,CAaCF,WAMD,SAAA0D,GAYAA,EAAA/K,OAPA,SAAA0C,EAAAwB,GACA,IAAAyF,GAAsBjH,SAItB,OAHAyG,EAAAE,OAAAnF,KACAyF,EAAAzF,QAEAyF,GAVA,CAaCoB,WAKD,SAAAC,GACAA,EAAA3F,KAAA,EACA2F,EAAAnG,OAAA,EACAmG,EAAAmC,UAAA,EACAnC,EAAAoC,QAAA,EACApC,EAAArG,MAAA,EACAqG,EAAA1G,OAAA,EACA0G,EAAAlG,SAAA,EACAkG,EAAAvG,MAAA,EACAuG,EAAAxG,YAAA,EACAwG,EAAA/F,KAAA,GACA+F,EAAApG,UAAA,GACAoG,EAAAzG,SAAA,GACAyG,EAAAtG,SAAA,GACAsG,EAAA2B,SAAA,GACA3B,EAAAjJ,OAAA,GACAiJ,EAAAqC,OAAA,GACArC,EAAAsC,QAAA,GACAtC,EAAAZ,MAAA,GACAY,EAAAjL,OAAA,GACAiL,EAAAuC,IAAA,GACAvC,EAAAwC,KAAA,GACAxC,EAAA0B,WAAA,GACA1B,EAAA4B,OAAA,GACA5B,EAAA6B,MAAA,GACA7B,EAAA8B,SAAA,GACA9B,EAAA+B,cAAA,GA1BA,CA2BC/B,WAED,SAAAC,GAqBAA,EAAAjL,OAXA,SAAAyN,EAAAvJ,EAAAxB,EAAApC,EAAAoN,GACA,IAAA/D,GACA8D,OACAvJ,OACAyJ,UAAuBrN,MAAAoC,UAKvB,OAHAgL,IACA/D,EAAA+D,iBAEA/D,GAnBA,CAsBCsB,WAMD,SAAAC,GAOAA,EAAAlL,OAHA,SAAA0B,GACA,OAAgBA,gBAUhBwJ,EAAAjC,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAC,EAAAyE,WAAA1E,EAAAxH,YAAAmH,EAAAI,KAbA,CAgBCiC,WAMD,SAAAC,GAUAA,EAAAnL,OANA,SAAA0C,EAAAmL,GACA,IAAAlE,GAAsBjH,SAGtB,OAFAyG,EAAAC,QAAAyE,KACAlE,EAAAkE,QACAlE,GAUAwB,EAAAlC,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAzJ,EAAAwJ,GAAAC,EAAAxG,SAAAyG,EAAA9F,UAAA6F,EAAAW,UAAAf,EAAAG,GAAAC,EAAAW,WAhBA,CAmBCsB,WAMD,SAAAC,GAOAA,EAAApL,OAHA,SAAA+H,EAAAC,GACA,OAAgBD,UAAAC,iBAUhBoD,EAAAnC,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAC,EAAAE,OAAAH,EAAAnB,UAAAoB,EAAA2E,QAAA5E,EAAAlB,eAbA,CAgBCoD,WAKD,IAAA2C,EAAA,WAGA,OAFA,aADA,IAUA,SAAAA,GAOAA,EAAA/N,OAHA,SAAA0C,EAAAmF,GACA,OAAgBnF,QAAAmF,WAUhBkG,EAAA9E,GAJA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,OAAAoC,EAAAC,QAAAF,IAAAzJ,EAAAwJ,GAAAC,EAAAxG,SAAAyG,EAAA9F,UAAA6F,EAAArB,SAAAsB,EAAAO,OAAAR,EAAArB,UAbA,CAgBCkG,WACD,IACAC,EAkFAC,GAjFA,SAAAD,GAUAA,EAAAhO,OAHA,SAAAM,EAAAhE,EAAAgQ,EAAA4B,GACA,WAAAC,EAAA7N,EAAAhE,EAAAgQ,EAAA4B,IAWAF,EAAA/E,GALA,SAAAlC,GACA,IAAAmC,EAAAnC,EACA,SAAAoC,EAAAC,QAAAF,IAAAC,EAAAO,OAAAR,EAAA5I,OAAA6I,EAAA9F,UAAA6F,EAAA5M,aAAA6M,EAAAO,OAAAR,EAAA5M,cAAA6M,EAAAE,OAAAH,EAAAkF,YACAjF,EAAAkF,KAAAnF,EAAAoF,UAAAnF,EAAAkF,KAAAnF,EAAAqF,aAAApF,EAAAkF,KAAAnF,EAAAsF,YA2BAR,EAAAS,WAxBA,SAAAC,EAAAtG,GAUA,IATA,IAAA3C,EAAAiJ,EAAAJ,UACAK,EAuBA,SAAAC,EAAAf,EAAAgB,GACA,GAAAhB,EAAA1R,QAAA,EAEA,OAAA0R,EAEA,IAAA/O,EAAA+O,EAAA1R,OAAA,IACA2S,EAAAjB,EAAAkB,MAAA,EAAAjQ,GACAkQ,EAAAnB,EAAAkB,MAAAjQ,GACA8P,EAAAE,EAAAD,GACAD,EAAAI,EAAAH,GAIA,IAHA,IAAAI,EAAA,EACAC,EAAA,EACAC,EAAA,EACAF,EAAAH,EAAA3S,QAAA+S,EAAAF,EAAA7S,QAAA,CACA,IAAAiT,EAAAP,EAAAC,EAAAG,GAAAD,EAAAE,IAGArB,EAAAsB,KAFAC,GAAA,EAEAN,EAAAG,KAIAD,EAAAE,KAGA,KAAAD,EAAAH,EAAA3S,QACA0R,EAAAsB,KAAAL,EAAAG,KAEA,KAAAC,EAAAF,EAAA7S,QACA0R,EAAAsB,KAAAH,EAAAE,KAEA,OAAArB,EArDAe,CAAAxG,EAAA,SAAAiH,EAAAC,GAEA,WADAD,EAAA3M,MAAAC,MAAAC,KAAA0M,EAAA5M,MAAAC,MAAAC,KAEAyM,EAAA3M,MAAAC,MAAAG,UAAAwM,EAAA5M,MAAAC,MAAAG,UAEA,IAEAyM,EAAA9J,EAAAtJ,OACAgT,EAAAR,EAAAxS,OAAA,EAA4CgT,GAAA,EAAQA,IAAA,CACpD,IAAA5P,EAAAoP,EAAAQ,GACAK,EAAAd,EAAAF,SAAAjP,EAAAmD,MAAAC,OACA8M,EAAAf,EAAAF,SAAAjP,EAAAmD,MAAAM,KACA,KAAAyM,GAAAF,GAIA,UAAArN,MAAA,mBAHAuD,IAAAiK,UAAA,EAAAF,GAAAjQ,EAAAmG,QAAAD,EAAAiK,UAAAD,EAAAhK,EAAAtJ,QAKAoT,EAAAC,EAEA,OAAA/J,GA1CA,CA6ECuI,WAKD,SAAAC,GAKAA,EAAA0B,OAAA,EAIA1B,EAAA2B,WAAA,EAIA3B,EAAA4B,SAAA,EAbA,CAcC5B,WACD,IA2GA9E,EA3GAgF,EAAA,WACA,SAAAA,EAAA7N,EAAAhE,EAAAgQ,EAAA4B,GACA7Q,KAAAyS,KAAAxP,EACAjD,KAAAuC,YAAAtD,EACAe,KAAA0S,SAAAzD,EACAjP,KAAA2S,SAAA9B,EACA7Q,KAAA4S,aAAA,KAmGA,OAjGAlQ,OAAA6F,eAAAuI,EAAApQ,UAAA,OACA8H,IAAA,WACA,OAAAxI,KAAAyS,MAEAhK,YAAA,EACAC,cAAA,IAEAhG,OAAA6F,eAAAuI,EAAApQ,UAAA,cACA8H,IAAA,WACA,OAAAxI,KAAAuC,aAEAkG,YAAA,EACAC,cAAA,IAEAhG,OAAA6F,eAAAuI,EAAApQ,UAAA,WACA8H,IAAA,WACA,OAAAxI,KAAA0S,UAEAjK,YAAA,EACAC,cAAA,IAEAoI,EAAApQ,UAAAuQ,QAAA,SAAA5L,GACA,GAAAA,EAAA,CACA,IAAAC,EAAAtF,KAAAmR,SAAA9L,EAAAC,OACAK,EAAA3F,KAAAmR,SAAA9L,EAAAM,KACA,OAAA3F,KAAA2S,SAAAN,UAAA/M,EAAAK,GAEA,OAAA3F,KAAA2S,UAEA7B,EAAApQ,UAAAmS,OAAA,SAAA9O,EAAAkL,GACAjP,KAAA2S,SAAA5O,EAAAqE,KACApI,KAAA0S,SAAAzD,EACAjP,KAAA4S,aAAA,MAEA9B,EAAApQ,UAAAoS,eAAA,WACA,UAAA9S,KAAA4S,aAAA,CAIA,IAHA,IAAAG,KACA3K,EAAApI,KAAA2S,SACAK,GAAA,EACAlB,EAAA,EAA2BA,EAAA1J,EAAAtJ,OAAiBgT,IAAA,CAC5CkB,IACAD,EAAApP,KAAAmO,GACAkB,GAAA,GAEA,IAAAC,EAAA7K,EAAA8K,OAAApB,GACAkB,EAAA,OAAAC,GAAA,OAAAA,EACA,OAAAA,GAAAnB,EAAA,EAAA1J,EAAAtJ,QAAA,OAAAsJ,EAAA8K,OAAApB,EAAA,IACAA,IAGAkB,GAAA5K,EAAAtJ,OAAA,GACAiU,EAAApP,KAAAyE,EAAAtJ,QAEAkB,KAAA4S,aAAAG,EAEA,OAAA/S,KAAA4S,cAEA9B,EAAApQ,UAAAwQ,WAAA,SAAAiC,GACAA,EAAAC,KAAAC,IAAAD,KAAAE,IAAAH,EAAAnT,KAAA2S,SAAA7T,QAAA,GACA,IAAAiU,EAAA/S,KAAA8S,iBACAS,EAAA,EAAAC,EAAAT,EAAAjU,OACA,OAAA0U,EACA,OAAAnI,EAAA1I,OAAA,EAAAwQ,GAEA,KAAAI,EAAAC,GAAA,CACA,IAAAC,EAAAL,KAAAM,OAAAH,EAAAC,GAAA,GACAT,EAAAU,GAAAN,EACAK,EAAAC,EAGAF,EAAAE,EAAA,EAKA,IAAAlO,EAAAgO,EAAA,EACA,OAAAlI,EAAA1I,OAAA4C,EAAA4N,EAAAJ,EAAAxN,KAEAuL,EAAApQ,UAAAyQ,SAAA,SAAA9K,GACA,IAAA0M,EAAA/S,KAAA8S,iBACA,GAAAzM,EAAAd,MAAAwN,EAAAjU,OACA,OAAAkB,KAAA2S,SAAA7T,OAEA,GAAAuH,EAAAd,KAAA,EACA,SAEA,IAAAoO,EAAAZ,EAAA1M,EAAAd,MACAqO,EAAAvN,EAAAd,KAAA,EAAAwN,EAAAjU,OAAAiU,EAAA1M,EAAAd,KAAA,GAAAvF,KAAA2S,SAAA7T,OACA,OAAAsU,KAAAC,IAAAD,KAAAE,IAAAK,EAAAtN,EAAAZ,UAAAmO,GAAAD,IAEAjR,OAAA6F,eAAAuI,EAAApQ,UAAA,aACA8H,IAAA,WACA,OAAAxI,KAAA8S,iBAAAhU,QAEA2J,YAAA,EACAC,cAAA,IAEAoI,EAzGA,IA4GA,SAAAhF,GACA,IAAA5I,EAAAR,OAAAhC,UAAAwC,SAIA4I,EAAAC,QAHA,SAAArC,GACA,2BAAAA,GAMAoC,EAAA9F,UAHA,SAAA0D,GACA,2BAAAA,GAMAoC,EAAA2E,QAHA,SAAA/G,GACA,WAAAA,IAAA,IAAAA,GAMAoC,EAAAO,OAHA,SAAA3C,GACA,0BAAAxG,EAAA2Q,KAAAnK,IAMAoC,EAAAE,OAHA,SAAAtC,GACA,0BAAAxG,EAAA2Q,KAAAnK,IAMAoC,EAAAkF,KAHA,SAAAtH,GACA,4BAAAxG,EAAA2Q,KAAAnK,IAMAoC,EAAAyE,WAHA,SAAA7G,EAAAoK,GACA,OAAA/G,MAAAC,QAAAtD,MAAAqK,MAAAD,IA3BA,CA8BChI","file":"static/js/3.eec37c68.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js\n// module id = 1487\n// module chunks = 3","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/workerManager.js\n// module id = 1716\n// module chunks = 3","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        }));\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js\n// module id = 1717\n// module chunks = 3","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\n// module id = 1718\n// module chunks = 3"],"sourceRoot":""}